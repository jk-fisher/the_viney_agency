import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { Fragment } from 'react'

import { getAllPageData } from '../../../lib/pages'
import { getAllAuthorIDs, getAuthorData } from '../../../lib/authors'
import { getAllBookData } from '../../../lib/books'
import { getLayout } from '../../../components/Layout/Layout'

import booksStyles from '../../../styles/BookList.module.css'

import AuthorInfo from '../../../components/Author/AuthorInfo'
import BookInfo from '../../../components/Books/BookInfo'
import BookList from '../../../components/Books/BookList'
import markdownToHtml from '../../../lib/markdown'
import DOMPurify from 'isomorphic-dompurify';


const Author = ({authorData, allBookData}) => {
    // console.log('date object',typeof authorData.book_releases[0].release_date)
    const authorsName = `${authorData.first_name} ${authorData.last_name}`
    const authorImage = authorData.image;
    const authorBio = authorData.markdownBody;
    const authorTwitter = authorData.twitter;
    const authorInsta = authorData.instagram;
    const authorWeb = authorData.url;

    const bookTitle = allBookData[0].title;
    const bookImage = allBookData[0].image;
    const bookGenre = allBookData[0].genre;
    const bookBlurb = allBookData[0].markdownBody;
    const reviews = allBookData[0].book_reviews;


    
    const releasedBooks = allBookData.map((book_release) => {
      return (
        book_release.markdownBody ?
        <Link
            href={{
            pathname: '/authors/[authorID]/[bookID]',
            query: {
                        authorID: authorData.authorID,
                        bookID: book_release.bookid  }
                    }}
            className={booksStyles.gridItem} key={book_release.bookid}>
                    <a>
                        <Image 
                            src={book_release.image}
                            alt={`${book_release.title}`}
                            width={400}
                            height={570}
                        />
                    </a>
        </Link> :
        <div className={booksStyles.gridItem} key={book_release.bookid}>
            <Image 
                src={book_release.image}
                alt={`${book_release.title}`}
                width={400}
                height={570}
            />
            
        </div>
        )
    })
    
    return ( <Fragment>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/assets/tva_logo.png" />
        </Head>
        <AuthorInfo
          image={authorImage}
          authorsName={authorsName}
          biography={authorBio}
          insta={authorInsta}
          twitter={authorTwitter}
          web={authorWeb}
          />
        <BookInfo
          authorPg={true} 
          authorsName={authorsName} 
          reviews={reviews}
          image={bookImage}
          genre={bookGenre}
          title={bookTitle}
          blurb={bookBlurb}
          /> 
        <BookList 
          authorsName={authorsName}
          releasedBooks={releasedBooks}
          />
    </Fragment>
    )
}

const getStaticPaths = async () => {
    const paths = getAllAuthorIDs();
    return {
        paths,
        fallback: false,
    };
}
const getStaticProps = async ({params}) => {
  const allPageData = getAllPageData();
  const authorData = getAuthorData(params.authorID)
  let dateObj = new Date(authorData.date)
  const uniqueID = `${dateObj.getDate()}${dateObj.getHours()}${dateObj.getMinutes()}`;
  authorData.date = uniqueID;
  // const body = await markdownToHtml(authorData.markdownBody);
  // console.log('body_markdownToHtml', body)
  // authorData.markdownBody = body;
  const allBookData = getAllBookData(authorData)

  return {
      props: {
        allPageData,
        authorData,
        allBookData
      } 
  }
}

Author.getLayout = getLayout; 
export {Author as default, getStaticProps, getStaticPaths};